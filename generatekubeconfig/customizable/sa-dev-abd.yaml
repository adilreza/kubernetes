apiVersion: v1
kind: ServiceAccount
metadata:
  name: dev-adil-user
  namespace: dev-adil
 
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: dev-adil-user
  namespace: dev-adil
  annotations:
    kubernetes.io/service-account.name: dev-adil-user
 
---
 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: adil-cluster-role
  namespace: dev-adil
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"] # Add other resources as needed
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: [""]
  resources: ["namespaces", "nodes", "deployments", "services", "secrets"] # Add other resources as needed
  verbs: ["get", "list", "watch", "create", "update"]
- apiGroups:
    - extensions
    - networking.k8s.io
  resources:
    - ingresses
  verbs: ["get", "list", "watch", "create"]
 
---
 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: adil-cluster-role-binding
  namespace: dev-adil
subjects:
- kind: ServiceAccount
  name: dev-adil-user
  namespace: dev-adil
roleRef:
  kind: ClusterRole
  name: adil-cluster-role
  apiGroup: rbac.authorization.k8s.io
